#: import RiseInTransition kivy.uix.screenmanager.RiseInTransition
#: import Animation kivy.animation.Animation

#:import Toolbar kivymd.toolbar.Toolbar
#:import ThemeManager kivymd.theming.ThemeManager
#:import NavigationDrawer kivymd.navigationdrawer.NavigationDrawer
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDSwitch kivymd.selectioncontrols.MDSwitch
#:import MDList kivymd.list.MDList
#:import OneLineListItem kivymd.list.OneLineListItem
#:import TwoLineListItem kivymd.list.TwoLineListItem
#:import ThreeLineListItem kivymd.list.ThreeLineListItem
#:import OneLineAvatarListItem kivymd.list.OneLineAvatarListItem
#:import OneLineIconListItem kivymd.list.OneLineIconListItem
#:import OneLineAvatarIconListItem kivymd.list.OneLineAvatarIconListItem
#:import SingleLineTextField kivymd.textfields.SingleLineTextField
#:import MDSpinner kivymd.spinner.MDSpinner
#:import MDCard kivymd.card.MDCard
#:import MDSeparator kivymd.card.MDSeparator
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import colors kivymd.color_definitions.colors
#:import SmartTile kivymd.grid.SmartTile
#:import MDSlider kivymd.slider.MDSlider
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import MDTab kivymd.tabs.MDTab
#:import MDProgressBar kivymd.progressbar.MDProgressBar
#:import MDAccordion kivymd.accordion.MDAccordion
#:import MDAccordionItem kivymd.accordion.MDAccordionItem
#:import MDThemePicker kivymd.theme_picker.MDThemePicker
#:import math math
#:import MapSource mapview.MapSource

#on_press: Animation(x=newposition or y=newposition).start(id) #to animate things



#V2.2.0

AnchorLayout:
		anchor_x: 'center'
		anchor_y: 'top'
		
		ScreenManager:
				id: sm
				size_hint: 1, 1

				MainScreen:
						name: "main"
						FloatLayout: #Main Elements
								size_hint: 1, 1
								Image:
										id: mainwallpaper
										#source: 'data/wallpapers/blackredmaterial2.png'
										source: app.wallpapernow
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Image:
										source: 'data/elements/AppBar_menu_KivyMD.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										opacity: .3

								Image:
										source: 'data/elements/AppBar_menu_button_KivyMD.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210


						FloatLayout: #Radar Elements
								size_hint: 1, 1
								Image: #image to display if radar is on or off
										source: app.radariconsource
										center_x: self.center_x
										center_y: self.center_y

								JZInvisiButton:
										elevation_normal: 3
										size_hint: None, None
										size: dp(64), dp(64)
										pos: 613, 415
										on_release: app.radar_callback_schedge()

						FloatLayout: #Temp Bubble Stuff
								size_hint: 1, 1
								Button:
										#text: Button to call temp
										#stays put
										id: tempbutt
										on_press: app.addtemp()
										on_press: Animation(x=680, duration=.4).start(TempBubble) #moves button back to screen
										pos: 700, 300
										size_hint: .3, .3
										background_color:(0.9, 0.9, 0.9, 0.0)
								MDFloatingTempActionButton:
										id: TempBubble
										elevation_normal: 0
										size_hint: .12, .2 #96x96
										pos: 1200, 300
										on_press: Animation(x=1800, duration=.4).start(TempBubble) #moves button off screen
										on_press: app.killtemp()

						FloatLayout: #LockscreenButton - placed over top right time - used to call lockscreen
								size_hint: 1, 1
								Button:
										on_press: Animation(y=0, duration=.1).start(lockscreenwallpaper)
										on_press: Animation(y=0, duration=.1).start(lockscreentime)
										on_press: Animation(y=0, duration=.1).start(lockscreenbutton)
										pos: 680, 415
										size_hint: .3, .2
										opacity: 0
								Button:
										on_press: Animation(y=0, duration=.1).start(lockscreenwallpaper)
										on_press: Animation(y=0, duration=.1).start(lockscreentime)
										on_press: Animation(y=0, duration=.1).start(lockscreenbutton)
										pos: 230, 30
										size_hint: .425, .8
										opacity: 0
						FloatLayout:
						        size_hint: 1,1
						        JZLargeButton:
						                id: OilReminder
										size_hint: .5, .5
										pos: ((200, 120) if app.changeoil == 1 else (3000, 300))
										on_press: self.pos = (3000, 300)
										on_press: sm.current = 'maintenance'
										on_press: sm.transition.direction = 'up'
                                        Image:
                                                source: 'data/icons/oil_icon.png'
                                                allow_stretch: True
                                                size_hint: .9, .9



						FloatLayout:
								size_hint: 1, 1
								Image:
										id: ShortcutDrawerBG
										source: 'data/elements/ShortcutDrawer.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: -340, 0
								Button:
										id: ShortcutDrawerButton
										on_press: Animation(x=0, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=0, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=0, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=0, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=0, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=0, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-223, duration=.2).start(SCD_Date)
										on_press: Animation(x=320, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.4).start(TempBubble) #moves button off screen
										on_press: app.killtemp()
										pos: -10, 0
										size_hint: .1, 1.1
										background_color:(0.9, 0.9, 0.9, 0.0)

						FloatLayout: #ShortCutDrawer Pieces
								size_hint: 1, 1
								Button:
										id: SCD_DateButton
										pos: -340, 408
										size_hint: .4, .15
										background_normal: 'data/buttons/shortcutdrawer/SD_date.png'
										background_down: 'data/buttons/shortcutdrawer/SD_date_pressed.png'
										on_press: Animation(x=-340, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

								Button:
										id: SCD_SettingsButton
										pos: -340, 336
										size_hint: .4, .15
										background_normal: 'data/buttons/shortcutdrawer/SD_settings.png'
										background_down: 'data/buttons/shortcutdrawer/SD_settings_pressed.png'
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'left'
										on_press: Animation(x=-340, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

								Button:
										id: SCD_GarageButton
										pos: -340, 264
										size_hint: .4, .15
										background_normal: 'data/buttons/shortcutdrawer/SD_garage.png'
										background_down: 'data/buttons/shortcutdrawer/SD_garage_pressed.png'
										on_press: app.garage_callback_schedge()
										on_release: app.garage_callback_schedge() #only on when button is pressed

								Button:
										id: SCD_OBDButton
										pos: -340, 192
										size_hint: .4, .15
										background_normal: 'data/buttons/shortcutdrawer/SD_gauges.png'
										background_down: 'data/buttons/shortcutdrawer/SD_gauges_pressed.png'
										on_press: sm.current = 'gaugeselect'
										on_press: sm.transition.direction = 'left'
										on_press: app.setup_OBD() #set up obd stuff
										on_press: Animation(x=-340, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

								Button:
										id: SCD_StopwatchButton
										pos: -340, 120
										size_hint: .4, .15
										background_normal: 'data/buttons/shortcutdrawer/SD_stopwatch.png'
										background_down: 'data/buttons/shortcutdrawer/SD_stopwatch_pressed.png'
										on_press: sm.current = 'stopwatch'
										on_press: sm.transition.direction = 'left'
										on_press: Animation(x=-340, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)
								Label:
										id: SCD_Date
										text: app.daynow + ", " + app.datenow
										pos: -535, 205
										font_size: 20

						FloatLayout:
								size_hint: 1, 1
								Button:
										id: ShortcutDrawerReturnButton
										on_press: Animation(x=-340, duration=.2).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.2).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.2).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)
										pos: 820, 0
										size_hint: 1, 1.1
										background_color:(0.9, 0.9, 0.9, 0.0)

				AudioScreen:
						name: "audio"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greymaterial.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: 'Audio'
										font_size: 30
										pos: 0, 210

								Button: #return button
										#text: "return to main"
										#on_press: sm.current = 'main'
										on_press: sm.current = sm.previous()

										on_press: sm.transition.direction = 'right'
										on_press: app.killbtdata()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								MDLabel: #label to display Audio Track Name - pulled from bluetooth
										text: app.bluetoothtitle
										font_style: 'Display2'
										theme_text_color: 'Primary'
										pos: 60, 90

								MDLabel: #label to display Audio Artist - pulled from bluetooth
										text: app.bluetoothartist
										font_style: 'Display1'
										opacity: .6
										pos: 64, 42

								Button:
										id: audio_aux
										on_press: app.aux_callback_schedge()
										on_press: Animation(y = 120, duration=.2).start(audio_aux)
										on_press: Animation(y = 120, duration=.2).start(audio_amfm)
										on_press: Animation(x = 1000, duration=0).start(audio_sourcereturn)
										on_press: app.displaybtdata()
										background_normal: 'data/icons/audio/audiocontrol.png'
										background_down: 'data/icons/audio/audiocontrol_pressed.png'
										background_color: app.theme_cls.primary_color
										size_hint: .21, .2
										pos: 486, 120
										Image:
												source: 'data/icons/auxin.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 100, 100
												allow_stretch: True

								Button:
										id: audio_amfm
										on_press: app.amfm_callback_schedge()
										on_press: Animation(y = 120, duration=.2).start(audio_aux)
										on_press: Animation(y = 120, duration=.2).start(audio_amfm)
										on_press: Animation(x = 1000, duration=0).start(audio_sourcereturn)
										on_press: app.disablebluetooth()
										on_press: Animation(x = 48, duration=0).start(bluetooth_enable)
										on_press: Animation(x = 1000, duration=0).start(bluetooth_enablereturn)
										background_normal: 'data/icons/audio/audiocontrol.png'
										background_down: 'data/icons/audio/audiocontrol_pressed.png'
										background_color: app.theme_cls.primary_color
										size_hint: .21, .2
										pos: 146, 120
										Image:
												source: 'data/icons/amfm.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 100, 100
												allow_stretch: True

								Image:
										source: 'data/elements/audiobar.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Button:
										id: audio_source
										elevation_normal: 3
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/elements/more/more.png'
										background_down: 'data/elements/more/more_pressed.png'
										pos: 654, 104
										on_press: Animation(y = 250, duration=.2).start(audio_aux)
										on_press: Animation(y = 250, duration=.2).start(audio_amfm)
										on_press: Animation(x = 654, duration=0).start(audio_sourcereturn)
										on_press: app.killbtdata()

								Button:
										id: audio_sourcereturn
										elevation_normal: 3
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/elements/more/more.png'
										background_down: 'data/elements/more/more_pressed.png'
										pos: 1000, 104
										on_press: Animation(y = 120, duration=.2).start(audio_aux)
										on_press: Animation(y = 120, duration=.2).start(audio_amfm)
										on_release: Animation(x = 1000, duration=0).start(audio_sourcereturn)
										on_press: app.displaybtdata()

								Button:
										id: bluetooth_enable
										elevation_normal: 3
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/icons/audio/bluetoothoff.png'
										background_down: 'data/icons/audio/bluetoothoff_pressed.png'
										pos: 48, 104
										on_press: Animation(x = 1000, duration=0).start(bluetooth_enable)
										on_press: Animation(x = 48, duration=0).start(bluetooth_enablereturn)
										on_press: app.enablebluetooth()
								Button:
										id: bluetooth_enablereturn
										elevation_normal: 3
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/icons/audio/bluetoothon.png'
										background_down: 'data/icons/audio/bluetoothon_pressed.png'
										pos: 1000, 104
										on_press: Animation(x = 48, duration=0).start(bluetooth_enable)
										on_press: Animation(x = 1000, duration=0).start(bluetooth_enablereturn)
										on_press: app.disablebluetooth()

								Button: #play
										id: audio_play
										pos: 337, 92
										size_hint: .1575, .2625 #126x126
										background_normal: 'data/icons/audio/play.png'
										background_down: 'data/icons/audio/play_pressed.png'
										on_press: Animation(y = -200, duration=0).start(audio_play)
										on_press: Animation(y = 92, duration=0).start(audio_pause)
										on_press: app.bluetoothplay_callback_schedge()
										background_color: app.theme_cls.primary_color
								Button: #pause
										id: audio_pause
										pos: 337, -200
										size_hint: .1575, .2625 #126x126
										background_normal: 'data/icons/audio/pause.png'
										background_down: 'data/icons/audio/pause_pressed.png'
										on_press: Animation(y = -200, duration=0).start(audio_pause)
										on_press: Animation(y = 92, duration=0).start(audio_play)
										on_press: app.bluetoothpause_callback_schedge()
										background_color: app.theme_cls.primary_color

								Button: #prev
										pos: 180, 105
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/icons/audio/prev.png'
										background_down: 'data/icons/audio/prev_pressed.png'
										on_press: app.seekdown_callback_schedge()

								Button: #next
										pos: 520, 105
										size_hint: .125, .2083333 #100x100
										background_normal: 'data/icons/audio/next.png'
										background_down: 'data/icons/audio/next_pressed.png'
										on_press: app.seekup_callback_schedge()

                        BoxLayout:
								orientation:'vertical'
								padding: '35dp'
								size_hint: 1, .9125
								MDProgressBar:
								        pos: 0, -20
										value: app.bluetoothprogress
										min: 0
										max: app.bluetoothduration
										opacity: 0 if app.bluetoothprogress == 0 else 1

				PerfScreen:
						name: "performance"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/blackpoly.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: (.835 ,0, 0, 1)
										opacity: 1.0

								Button:
										on_press: sm.current = 'nosscreen'
										on_press: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=.2).start(dock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_power)
										pos: 680, 415
										size_hint: .3, .2
										opacity: 0

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Performance[/size]'
										pos: 0, 210

						FloatLayout:
								size_hint: 1, 1



								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
										text: "\n\n\n\n\nStopwatch"
										font_size: 25
										on_press: sm.current = 'stopwatch'
										on_press: sm.transition.direction = 'left'
										pos: 6, 167
										size_hint: None, None
										height: 176
										width: 176
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/stopwatch_icon.png'
										background_down: 'data/icons/app_icons/stopwatch_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\n\nLaunch Control"
										font_size: 25
										on_press: sm.current = 'launchcontrolsetup'
										on_press: sm.transition.direction = 'left'
										pos: 198, 155
										size_hint: None, None
										height: 200
										width: 200
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/launch_icon.png'
										background_down: 'data/icons/app_icons/launch_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\n\nAccelerometer"
										font_size: 25
										on_release: sm.current = 'accelerometer'
										on_release: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=.2).start(dock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_power)
										on_press: app.addaccel()
										pos: 412, 155
										size_hint: None, None
										height: 200
										width: 200
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/accel_icon.png'
										background_down: 'data/icons/app_icons/accel_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\n\nOBDII"
										font_size: 25
										on_release: sm.current = 'gaugeselect'
										on_release: sm.transition.direction = 'left'
										on_release: app.setup_OBD() #set up obd stuff
										pos: 610, 155
										size_hint: None, None
										height: 200
										width: 200
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/obdII_icon.png'
										background_down: 'data/icons/app_icons/obdII_icon_pressed.png' #blow up to 290 (scaled in gimp)


				AppsScreen:
						name: "apps"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/darkgreymaterial2.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: (.33 ,.43 ,.48, 1)
										opacity: 1.0

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Apps[/size]'
										pos: 0, 210
						FloatLayout:
								size_hint: 1, 1

								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						GridLayout:
								cols: 5
								rows: 3
								padding: 30
								spacing: 50, 30
								size_hint: 1, .9
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'paint'
										on_press: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										text: "\n\n\n\nPaint"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/paint_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'logo'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nCoPilot Logo"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/CoPilot_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nClocks"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/clocks_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'gps'
										on_press: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=.2).start(dock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=.2).start(dock_normal_power)
										text: "\n\n\n\nGPS"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/gps_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'stopwatch'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nStopwatch"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/stopwatch_color_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'files'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nFiles"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/files_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'launchcontrolsetup'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nLaunch Control"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/launch_color_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'photos'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nPhotos"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/photos_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'maintenance'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nMaintenance"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/maintenance_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: sm.current = 'testapp'
										on_press: sm.transition.direction = 'left'
										text: "\n\n\n\nTest"
										font_size: 20
										Image:
												source: 'data/icons/app_icons/test_icon.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										#text: "Not Used"
										font_size: 30
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
										#text: "Not Used"
										font_size: 30






				ControlsScreen:
						name: "controls"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/darkgreymaterial.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: (1, .34, .13, 1)

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Controls[/size]'
										pos: 0, 210

						FloatLayout:
								size_hint: 1, 1


								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
										text: "\n\n\n\nGarage"
										font_size: 25
										on_press: app.garage_callback_schedge()
										on_release: app.garage_callback_schedge() #only on when button is pressed
										pos: 60, 280
										size_hint: None, None
										height: 160
										width: 150
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/garage_icon.png'
										background_down: 'data/icons/app_icons/garage_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\nRadar"
										font_size: 25
										on_press: app.radar_callback_schedge()
										pos: 68, 110
										size_hint: None, None
										height: 140
										width: 135
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/radar_icon.png'
										background_down: 'data/icons/app_icons/radar_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\nScreen Off"
										font_size: 25
										on_press: app.TurnScreenOff()
										on_press: sm.current = 'offscreen'
										on_press: sm.transition.direction = 'left'
										pos: 332, 290
										size_hint: None, None
										height: 140
										width: 135
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/brightness_icon.png'
										background_down: 'data/icons/app_icons/brightness_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\nCup Lights"
										font_size: 25
										on_press: app.leds_callback_schedge()
										pos: 332, 110
										size_hint: None, None
										height: 140
										width: 135
										background_color:(1, 1, 1, 1)
										background_normal: app.lightsiconsource
										background_down: 'data/icons/app_icons/lights_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\nWindows Up"
										font_size: 25
										on_press: app.windowsup_callback_schedge()
										pos: 590, 280
										size_hint: None, None
										height: 160
										width: 150
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/windowsup_icon.png'
										background_down: 'data/icons/app_icons/windowsup_icon_pressed.png' #blow up to 290 (scaled in gimp)

								Button:
										text: "\n\n\n\nWindows Down"
										font_size: 25
										on_press: app.windowsdown_callback_schedge()
										pos: 590, 100
										size_hint: None, None
										height: 160
										width: 150
										background_color:(1, 1, 1, 1)
										background_normal: 'data/icons/app_icons/windowsdown_icon.png'
										background_down: 'data/icons/app_icons/windowsdown_icon_pressed.png' #blow up to 290 (scaled in gimp)


				SettingsScreen:
						name: "settings"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210
								Label: #label to display screen name
										markup: True
										text: '[size=30]Settings[/size]'
										pos: 0, 210
								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										on_press: app.save()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								Button: #enable dev button - tap 5 times to enable - will see snackbar on success
										on_press: app.devtap()
										on_press: app.show_example_snackbar('enabledev')
										on_press: Animation(x=0, duration=.2).start(killdevbutton) if app.devtaps == 4 else Animation(x=1600, duration=0).start(killdevbutton)
										size_hint: .2, .15
										pos: 320, 400
										opacity: 0

						FloatLayout:
								size_hint: 1, .88
								MDTabbedPanel:
										id: tab_panel
										tab_display_mode:'text'
										font_size: 30

										MDTab:
												name: 'system'
												text: "System"
												FloatLayout:
														Button:
																size_hint: 1, .19
																pos: 0, 304
																background_normal: 'data/buttons/settingslines/SL_SysDiag.png'
																background_down: 'data/buttons/settingslines/SL_SysDiag_pressed.png'
																on_press: sm.current = 'sysdiagnostics'
																on_press: app.add_message()
																on_press: sm.transition.direction = 'left'
														Button:
																size_hint: 1, .19
																pos: 0, 232
																background_normal: 'data/buttons/settingslines/SL_SysDebug.png'
																background_down: 'data/buttons/settingslines/SL_SysDebug_pressed.png'
																on_press: sm.current = 'sysdebug'
																on_press: sm.transition.direction = 'left'
														Button:
																size_hint: 1, .19
																pos: 0, 160
																background_normal: 'data/buttons/settingslines/SL_SysReset.png'
																background_down: 'data/buttons/settingslines/SL_SysReset_pressed.png'
																on_release: app.show_indev_dialog()
														Button:
																id: killdevbutton
																size_hint: 1, .19
																pos: 1600, 88
																background_normal: 'data/buttons/settingslines/SL_killdev.png'
																background_down: 'data/buttons/settingslines/SL_killdev_pressed.png'
																on_press: app.killdev()
																on_press: Animation(x=1600, duration=.2).start(killdevbutton)
										MDTab:
												name: 'GPIO'
												text: "GPIO"
												FloatLayout:
														Button:
																size_hint: 1, .19
																pos: 0, 304
																background_normal: 'data/buttons/settingslines/SL_HK1.png'
																background_down: 'data/buttons/settingslines/SL_HK1_pressed.png'
																on_press: sm.current = 'hotkey1chooser'
																on_press: sm.transition.direction = 'left'
																text: "                                                                                                                                                                " + app.HKonenow
														Button:
																size_hint: 1, .19
																pos: 0, 232
																background_normal: 'data/buttons/settingslines/SL_HK2.png'
																background_down: 'data/buttons/settingslines/SL_HK2_pressed.png'
																on_press: sm.current = 'hotkey2chooser'
																on_press: sm.transition.direction = 'left'
																text: "                                                                                                                                                                " + app.HKtwonow
														Button:
																size_hint: 1, .19
																pos: 0, 160
																background_normal: 'data/buttons/settingslines/SL_HKdefault.png'
																background_down: 'data/buttons/settingslines/SL_HKdefault_pressed.png'
																on_press: app.sethotkeydefaults()

										MDTab:
												name: 'theme'
												text: "Theme"
												FloatLayout:
														Button:
																size_hint: 1, .19
																pos: 0, 304
																background_normal: 'data/buttons/settingslines/SL_theme.png'
																background_down: 'data/buttons/settingslines/SL_theme_pressed.png'
																on_release: MDThemePicker().open()
																text: "                                                                                                                                                                " + app.theme_cls.primary_palette

														Button:
																size_hint: 1, .19
																pos: 0, 232
																background_normal: 'data/buttons/settingslines/SL_wallpaper.png'
																background_down: 'data/buttons/settingslines/SL_wallpaper_pressed.png'
																on_press: sm.current = 'wallpaperselect'
																on_press: sm.transition.direction = 'left'
																on_press: Animation(y=-100, duration=0).start(dock)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
                                                                on_press: Animation(y=-100, duration=0).start(dock_normal_power)

										MDTab:
												name: 'Info'
												text: "Info"
												FloatLayout:
														Button:
																size_hint: 1, .19
																pos: 0, 304
																background_normal: 'data/buttons/settingslines/SL_version.png'
																background_down: 'data/buttons/settingslines/SL_version_pressed.png'
																on_release: app.show_version_dialog()
																text: "                                                                                                                                                                " + app.version

														Button:
																size_hint: 1, .19
																pos: 0, 232
																background_normal: 'data/buttons/settingslines/SL_controls.png'
																background_down: 'data/buttons/settingslines/SL_controls_pressed.png'
																on_release: app.show_indev_dialog()
														Button:
																size_hint: 1, .19
																pos: 0, 160
																background_normal: 'data/buttons/settingslines/SL_tutorial.png'
																background_down: 'data/buttons/settingslines/SL_tutorial_pressed.png'
																on_release: app.show_indev_dialog()
										MDTab:
												name: 'power'
												text: "Power"
												FloatLayout:
														Button:
																size_hint: 1, .19
																pos: 0, 304
																background_normal: 'data/buttons/settingslines/SL_kill.png'
																background_down: 'data/buttons/settingslines/SL_kill_pressed.png'
																on_release: sm.current = 'kill'
																on_press: sm.transition.direction = 'down'
														Button:
																size_hint: 1, .19
																pos: 0, 232
																background_normal: 'data/buttons/settingslines/SL_reboot.png'
																background_down: 'data/buttons/settingslines/SL_reboot_pressed.png'
																on_release: app.reboot()
														Button:
																size_hint: 1, .19
																pos: 0, 160
																background_normal: 'data/buttons/settingslines/SL_power.png'
																background_down: 'data/buttons/settingslines/SL_power_pressed.png'
																on_release: app.shutdown()

				PaintScreen:
						name: "paint"
						FloatLayout:
								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										pos: -45, 399
										size_hint: .2, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
                                MDIconButton:
										size_hint: None, None
										size: dp(50), dp(50)
										pos: 740, 5
										on_release: paint.canvas.clear()
										icon: 'delete'

								Painter
								        id: paint


				FilesScreen:
						name: "files"
						BoxLayout:
								orientation: 'vertical'

								BoxLayout:
										size_hint_y: None
										height: sp(30)

										MDRaisedButton:
												text: 'Icon View'
												on_press: fc.view_mode = 'icon'
										MDRaisedButton:
												text: 'List View'
												on_press: fc.view_mode = 'list'
								FileChooser:
										id: fc
										FileChooserIconLayout
										FileChooserListLayout

				LogoScreen:
						name: "logo"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/CoPilot_Wallpaper_2.png'
										center_x: self.center_x
										center_y: self.center_y

								MDLabel: #label to display version number
										text: app.version
										font_style: 'Headline'
										theme_text_color: 'Primary'
										pos: 705, -150

								MDLabel: #label to display my name
										text: 'Engineered by:\nJoel Zeller'
										font_style: 'Headline'
										theme_text_color: 'Primary'
										pos: 30, -135

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: (.54, .76, .29, 1)

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]CoPilot[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										pos: 270, 30
										size_hint: .325, .8
										background_color:(0.9, 0.9, 0.9, 0.0)

				ClockChooserScreen:
						name: "clockchooser"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/darkgreymaterial2.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Clocks[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						GridLayout:
								cols: 4
								rows: 3
								padding: 30
								spacing: 5
								size_hint: 1, .85
								pos: 0, -20

								JZLargeButton:
										text: "Classic"
										on_press: sm.current = 'classicclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30

								JZLargeButton:
										text: "Sport"
										on_press: sm.current = 'sportclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30
								JZLargeButton:
										text: "Executive"
										on_press: sm.current = 'executiveclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30
								JZLargeButton:
										text: "Worms"
										on_press: sm.current = 'wormclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30
										disabled: True
								JZLargeButton:
										text: "Day Gauge"
										on_press: sm.current = 'daygaugeclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30
										disabled: True
								JZLargeButton:
										text: "Night Gauge"
										on_press: sm.current = 'nightgaugeclock'
										on_press: sm.transition.direction = 'down'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										font_size: 30

								JZLargeButton:
										text: "Info"
										on_press: sm.current = 'infoclock'
										on_press: sm.transition.direction = 'down'
										font_size: 30
								JZLargeButton:
										text: "Photo Clock"
										on_press: sm.current = 'photoclock'
										on_press: sm.transition.direction = 'down'
										font_size: 30
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)



						#Classic Clock
				ClassicClockScreen:
						name: "classicclock"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y

								Image:
										source: 'data/watchfaces/classic.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0

						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 0, 0,.9
                                        Line: #seconds
                                                points: [400, 240, 400+0.8*250*math.sin(math.pi/30*app.timenow_second), 240+0.8*250*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 1, 0, 0, .8
                                        Line: #minutes
                                                points: [400, 240, 400+0.7*250*math.sin(math.pi/30*app.timenow_minute), 240+0.7*250*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 1, 0, 0, .7
                                        Line: #hours
                                                points: [400, 240, 400+0.5*250*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 240+0.5*250*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

						FloatLayout:
								size_hint: 1, .85
								anchor_y: 'bottom'
								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: self.canvas.clear
										size_hint: 1, 1.5
										background_color:(0.9, 0.9, 0.9, 0.0)
					#Sport Clock
				SportClockScreen:
						name: "sportclock"
						FloatLayout
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
								Image:
										source: 'data/watchfaces/sport.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0

						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 0, 0,.9
                                        Line: #seconds
                                                points: [400, 240, 400+0.8*250*math.sin(math.pi/30*app.timenow_second), 240+0.8*250*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 1, 0, 0, .8
                                        Line: #minutes
                                                points: [400, 240, 400+0.7*250*math.sin(math.pi/30*app.timenow_minute), 240+0.7*250*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 1, 0, 0, .7
                                        Line: #hours
                                                points: [400, 240, 400+0.5*250*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 240+0.5*250*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: self.canvas.clear
										size_hint: 1, 1.5
										background_color:(0.9, 0.9, 0.9, 0.0)
					#Exec Clock
				ExecutiveClockScreen:
						name: "executiveclock"
						FloatLayout
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
								Image:
										source: 'data/watchfaces/executive.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0
						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 0, 0, 0,.9
                                        Line: #seconds
                                                points: [400, 240, 400+0.8*250*math.sin(math.pi/30*app.timenow_second), 240+0.8*250*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 0, 0, 0, .8
                                        Line: #minutes
                                                points: [400, 240, 400+0.7*250*math.sin(math.pi/30*app.timenow_minute), 240+0.7*250*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 0, 0, 0, .7
                                        Line: #hours
                                                points: [400, 240, 400+0.5*250*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 240+0.5*250*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: self.canvas.clear
										size_hint: 1, 1.5
										background_color:(0.9, 0.9, 0.9, 0.0)
					#Worms Clock
				WormsClockScreen:
						name: "wormclock"
						FloatLayout
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
						FloatLayout:
                                canvas:

                                #Color(1.0, 0.0, 0.0, 0.9)
                                #Line(circle=(x, y, 170, 0, self.r*time.second/30), width=10)
                                #Color(0.0, 1.0, 0.0, 0.8)
                                #Line(circle=(x, y, 140, 0, self.r*time.minute/30), width=10)
                                #Color(0.0, 0.0, 1.0, 0.7)
                                #time_hour_mod = time.hour
                                #if time.hour > 12:
                                #    time_hour_mod = time.hour-12
                                #Line(circle=(x, y, 110, 0, self.r*time_hour_mod/6), width=10)


                                        Color:
                                                rgba: 1, 0, 0,.9
                                        Line: #seconds
                                                circle: [400, 240, 170, 0, 250*app.timenow_second/30]
                                                width: 10
                                        Color:
                                                rgba: 0, 1, 0, .8
                                        Line: #minutes
                                                circle: [400, 240, 140, 0, 250*app.timenow_minute/30]
                                                width: 10
                                        Color:
                                                rgba: 0, 0, 1, .7
                                        Line: #hours
                                                circle: [400, 240, 110, 0, 250*app.timenow_hour/6]
                                                width: 10


								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: self.canvas.clear

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 60
										pos: 0, 0

					#Day Gauge Clock
				DayGaugeClockScreen:
						name: "daygaugeclock"
						FloatLayout
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
						FloatLayout:
								size_hint: 1, 1
								anchor_y: 'top'
								Image:
										source: 'data/watchfaces/daygaugejz_grey.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0
						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 0, 0,.9
                                        Line: #seconds
                                                points: [400, 240, 400+0.8*250*math.sin(math.pi/30*app.timenow_second), 240+0.8*250*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 1, 0, 0, .8
                                        Line: #minutes
                                                points: [400, 240, 400+0.7*250*math.sin(math.pi/30*app.timenow_minute), 240+0.7*250*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 1, 0, 0, .7
                                        Line: #hours
                                                points: [400, 240, 400+0.5*250*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 240+0.5*250*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: self.canvas.clear
										background_color:(0.9, 0.9, 0.9, 0.0)
					#Night Gauge Clock
				NightGaugeClockScreen:
						name: "nightgaugeclock"
						FloatLayout
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
						FloatLayout:
								size_hint: 1, 1
								anchor_y: 'top'
								Image:
										source: 'data/watchfaces/nightgaugejz.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0

						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 0, 0,.9
                                        Line: #seconds
                                                points: [400, 240, 400+0.8*250*math.sin(math.pi/30*app.timenow_second), 240+0.8*250*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 1, 0, 0, .8
                                        Line: #minutes
                                                points: [400, 240, 400+0.7*250*math.sin(math.pi/30*app.timenow_minute), 240+0.7*250*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 1, 0, 0, .7
                                        Line: #hours
                                                points: [400, 240, 400+0.5*250*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 240+0.5*250*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

								Button: #middle of screen button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: self.canvas.clear
										background_color:(0.9, 0.9, 0.9, 0.0)
					#Info Clock
				InfoClockScreen:
						name: "infoclock"
						FloatLayout:
								size_hint: 1, 1
								anchor_y: 'top'
								Image:
										source: 'data/wallpapers/infoclock.png'
										center_x: self.center_x
										center_y: self.center_y

						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 1, 1,.9
                                        Line: #seconds
                                                points: [200, 276, 200+0.8*175*math.sin(math.pi/30*app.timenow_second), 276+0.8*175*math.cos(math.pi/30*app.timenow_second)]
                                                width: 1
                                        Color:
                                                rgba: 1, 1, 1, 1
                                        Line: #minutes
                                                points: [200, 276, 200+0.7*175*math.sin(math.pi/30*app.timenow_minute), 276+0.7*175*math.cos(math.pi/30*app.timenow_minute)]
                                                width: 2
                                        Color:
                                                rgba: 1, 1, 1, 1
                                        Line: #hours
                                                points: [200, 276, 200+0.5*175*math.sin(math.pi/360*(app.timenow_hour*60 + app.timenow_minute)), 276+0.5*175*math.cos(math.pi/360*(app.timenow_hour*60 + app.timenow_minute))]
                                                width: 3

								Button: #whole screen is return button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: self.canvas.clear
								MDLabel: #label to display current time
										markup: True
										text: app.timenow + " " + app.ampm
										font_size: 60
										pos: 400, 65
										halign: 'left'
								MDLabel: #label to display current date
										markup: True
										text: " " + app.datenow + ", " + app.yearnow
										font_size: 40
										pos: 400, 0
										halign: 'left'
										opacity: .75

					#Photo Clock
				PhotoClockScreen:
						name: "photoclock"
						FloatLayout:
								id: layout
								size_hint: 1, 1
								anchor_y: 'top'
								Image:
										id: image
										source: 'data/wallpapers/polymountain.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Button: #whole screen is return button
										#text: "return"
										on_press: sm.current = 'clockchooser'
										on_press: sm.transition.direction = 'up'
										background_color:(0.9, 0.9, 0.9, 0)

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 60
										pos: -300, 180


				GPSScreen:
						name: "gps"
						FloatLayout:
								size_hint: 1, 1
								MapView: #WIP
										lat: 39.135481
										lon: -84.529143
										zoom: 17 #maybe 18 for a little larger print
								Image:
										id: image
										source: 'data/wallpapers/tempmap.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										opacity: 0
								Image:
										source: 'data/elements/GPS_Toolbar.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										opacity: .35

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=.2).start(dock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=0, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=0, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=0, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=0, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=.2).start(dock_normal_power)
										pos: -369, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				StopwatchScreen:
						name: "stopwatch"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/stopwatchblue.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: (.25, .32, .71, 1)
										opacity: 1.0

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						BoxLayout:
								orientation:'vertical'
								padding: '130dp'
								MDProgressBar:
										value: app.stopwatchsecnow
										min:0
										max:60


						FloatLayout:
								size_hint: 1, 1
								orientation: 'horizontal'
								Label: #label to display stopwatch
										markup: True
										text: app.stopwatchnow
										font_size: 140
										pos: 0, 70
								Button:
										size_hint: None, None
										size: dp(144), dp(144)
										pos: 128, 85
										on_press: app.stopwatch_start()
										background_color:(1.0, 1.0, 1.0, 1.0)
										background_normal: 'data/buttons/stopwatch/play.png'
										background_down: 'data/buttons/stopwatch/play_pressed.png'
								Button:
										size_hint: None, None
										size: dp(144), dp(144)
										pos: 328, 85
										on_press: app.stopwatch_stop()
										background_color:(1.0, 1.0, 1.0, 1.0)
										background_normal: 'data/buttons/stopwatch/pause.png'
										background_down: 'data/buttons/stopwatch/pause_pressed.png'

								Button:
										size_hint: None, None
										size: dp(144), dp(144)
										pos: 528, 85
										on_press: app.stopwatch_reset()
										background_color:(1.0, 1.0, 1.0, 1.0)
										background_normal: 'data/buttons/stopwatch/reset.png'
										background_down: 'data/buttons/stopwatch/reset_pressed.png'

				KillScreen:
						name: "kill"
						FloatLayout:
								size_hint: 1, 1
								orientation: 'vertical'
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Image:
										source: 'data/elements/bluecard.png'
										center_x: self.center_x
										center_y: self.center_y
										pos: 0, 32
								MDLabel:
										font_style: 'Headline'
										theme_text_color: 'Custom'
										text_color: (1,1,1,1)
										text: "Would you like to kill CoPilot?"
										halign: 'center'
										pos: 0, 100
								Button: #dismiss
										pos: 257, 170
										size_hint: .1575, .2625 #126x126
										background_normal: 'data/buttons/confirm_dismiss/dismiss.png'
										background_down: 'data/buttons/confirm_dismiss/dismiss_pressed.png'
										on_release: sm.current = 'settings'
										on_release: sm.transition.direction = 'up'
								Button: #confirm
										pos: 417, 170
										size_hint: .1575, .2625 #126x126
										background_normal: 'data/buttons/confirm_dismiss/confirm.png'
										background_down: 'data/buttons/confirm_dismiss/confirm_pressed.png'
										on_release: exit()

				DiagnosticsScreen:
						name: "sysdiagnostics"

						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]System Diagnostics[/size]'
										halign: 'center'
										pos: 0, 210

								Button: #return button
										#text: "return to settings"
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_message()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								Button:
										size_hint: 1, .15
										pos: 0, 344
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										MDLabel:
												text: "CPU Temperature:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: app.CPUtempnow
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)

								Button:
										size_hint: 1, .15
										pos: 0, 272
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										MDLabel:
												text: "Core Voltage:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: app.corevoltagenow
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)

								Button:
										size_hint: 1, .15
										pos: 0, 200
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										MDLabel:
												text: "IP Address:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: app.ip
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)


				SystemDebugScreen:
						name: "sysdebug"

						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]System Debug[/size]'
										halign: 'center'
										pos: 0, 210

								Button: #return button
										#text: "return to settings"
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button: #return button
										#text: "return"
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										pos: 270, 30
										size_hint: .325, .8
										background_color:(0.9, 0.9, 0.9, 0.0)

								MDRaisedButton:
										text: "Window Debug"
										font_size: 25
										on_release: sm.current = 'windowdebug'
										on_press: sm.transition.direction = 'left'
										pos: 20, 255
										size_hint: .3, .3

				WindowDebugScreen:
						name: "windowdebug"

						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Window Debug[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to sysdebug"
										on_press: sm.current = 'sysdebug'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								MDRaisedButton: #Emergency Windows stop button
										text: "STOP"
										font_size: 50
										on_press: app.allwindowsstop_callback_schedge()
										pos: 270, 120
										size_hint: .325, .5
										background_color:(.714 ,.109, .109, 1)

								MDRaisedButton:
										text: "Driver Up"
										font_size: 25
										on_press: app.driverup_callback_schedge()
										on_release: app.driverup_callback_schedge() #only on when button is pressed
										pos: 20, 312
										size_hint: .3, .2


								MDRaisedButton:
										text: "Driver Stop"
										font_size: 25
										on_press: app.driverstop_callback_schedge()
										pos: 20, 202
										size_hint: .3, .2


								MDRaisedButton:
										text: "Driver Down"
										font_size: 25
										on_press: app.driverdown_callback_schedge()
										on_release: app.driverdown_callback_schedge() #only on when button is pressed
										pos: 20, 92
										size_hint: .3, .2


								MDRaisedButton:
										text: "Passenger Up"
										font_size: 25
										on_press: app.passengerup_callback_schedge()
										on_release: app.passengerup_callback_schedge() #only on when button is pressed
										pos: 540, 312
										size_hint: .3, .2


								MDRaisedButton:
										text: "Passenger Stop"
										font_size: 25
										on_press: app.passengerstop_callback_schedge()
										pos: 540, 202
										size_hint: .3, .2


								MDRaisedButton:
										text: "Passenger Down"
										font_size: 25
										on_press: app.passengerdown_callback_schedge()
										on_release: app.passengerdown_callback_schedge() #only on when button is pressed
										pos: 540, 92
										size_hint: .3, .2

				LaunchControlSetupScreen:
						name: "launchcontrolsetup"

						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								JZLargeButton:
										text: "Start\nLaunch\nSequence"
										font_size: 30
										halign: 'center'
										on_press: sm.current = 'launchcontrol'
										on_press: sm.transition.direction = 'left'
										on_press: app.add_launch()
										pos: 270, 120
										size_hint: .325, .5

				LaunchControlScreen:
						name: "launchcontrol"

						FloatLayout:
								size_hint: 1, 1
								Image:
										id: image
										source: 'data/wallpapers/xmas_blank.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

						FloatLayout:
								canvas:
								        #Pre-Stage
								        Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+30 else (0, 0, 0, 0))
										Line:
												circle: [330, 431, 0, 0, 0]
												width: 25
										Line:
												circle: [350, 431, 0, 0, 0]
												width: 25
										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+50 else (0, 0, 0, 0))
										Line:
												circle: [440, 431, 0, 0, 0]
												width: 25
										Line:
												circle: [460, 431, 0, 0, 0]
												width: 25
										#Stage
										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+70 else (0, 0, 0, 0))
										Line:
												circle: [330, 366, 0, 0, 0]
												width: 25
										Line:
												circle: [350, 366, 0, 0, 0]
												width: 25

										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+90 else (0, 0, 0, 0))
										Line:
												circle: [440, 366, 0, 0, 0]
												width: 25
										Line:
												circle: [460, 366, 0, 0, 0]
												width: 25

										#First Line
										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+100 else (0, 0, 0, 0))
										Line:
												circle: [330, 321, 0, 0, 0]
												width: 50
										Line:
												circle: [470, 321, 0, 0, 0]
												width: 50

										#Second Line
										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+105 else (0, 0, 0, 0))
										Line:
												circle: [329, 256, 0, 0, 0]
												width: 50
										Line:
												circle: [470, 256, 0, 0, 0]
												width: 50

										#Third Line
										Color:
												rgba: ((1, 1, .4, .2) if app.time_second_mod > app.launch_start_time+110 else (0, 0, 0, 0))
										Line:
												circle: [327, 191, 0, 0, 0]
												width: 50
										Line:
												circle: [470, 191, 0, 0, 0]
												width: 50

										#GO!
										Color:
												rgba: ((.1, .9, .1, .3) if app.time_second_mod > app.launch_start_time+115 else (0, 0, 0, 0))
										Line:
												circle: [321, 116, 0, 0, 0]
												width: 50
										Line:
												circle: [470, 116, 0, 0, 0]
												width: 50

								MDRaisedButton: #exit - used after launch is complete
										text: "exit"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										on_press: self.canvas.clear
										pos: 14, 72
										size_hint: .2, .1
										on_press: app.add_launch

				PhotosScreen:
						name: "photos"

						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Photos[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						FloatLayout:
								size_hint: 1, .865
								ScrollView:
										do_scroll_x: False
										GridLayout:
												cols: 4
												row_default_height: (self.width - self.cols*self.spacing[0])/self.cols
												row_force_default: True
												size_hint_y: None
												height: 20 * dp(100) # /1 * self.row_default_height
												padding: dp(4), dp(4)
												spacing: dp(4)
												SmartTile:
														mipmap: True
														source: './data/icons/CoPilotIcon.png'
														on_release: app.show_easter_dialog()
												Image:
														source: 'data/wallpapers/Gold_Stratus.png'
												Image:
														source: 'data/wallpapers/Stratus_rear.png'
												Image:
														source: 'data/wallpapers/RT.png'

				MaintenanceScreen:
						name: "maintenance"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Maintenance[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								Button:
										size_hint: 1, .15
										pos: 0, 344
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										on_press: sm.current = 'maintenancesetoilinfo'
										on_press: sm.transition.direction = 'left'
										MDLabel:
												text: "Next oil change:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: str(app.oilmileage) +" miles or " + str(app.oildatemonth)+"/"+str(app.oildateday)+"/"+str(app.oildateyear)
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)

								Button:
										size_hint: 1, .15
										pos: 0, 272
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										MDLabel:
												text: "Next light check:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: str(app.oildatemonth)+"/"+str(app.oildateday)+"/"+str(app.oildateyear)
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)

								Button:
										size_hint: 1, .15
										pos: 0, 200
										background_normal: 'data/buttons/list/ListBar.png'
										background_down: 'data/buttons/list/ListBar_pressed.png'
										MDLabel:
												text: "Next maintenance due:"
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(760), dp(48)
										MDLabel:
												text: str(app.oildatemonth)+"/"+str(app.oildateday)+"/"+str(app.oildateyear)
												center_x: self.parent.center_x+100
												center_y: self.parent.center_y
												font_style: 'Title'
												halign: 'left'
												size: dp(400), dp(48)

								MDCheckbox:
                                        pos: 278, 85
                                        size_hint: .06, .1

                                        on_press: app.oilnotifyflip()

                                        state: ('down' if app.oilnotify == 1 else 'normal')
                                MDLabel:
                                        text: "Notify on Boot"
                                        font_style: 'Title'
                                        halign: 'center'
                                        pos: 0, -130

				MaintenanceSetOilInfoScreen:
						name: "maintenancesetoilinfo"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Image:
										source: 'data/elements/Half_Divider.png'
										center_x: self.center_x
										center_y: self.center_y
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Set Next Oil Change Date and Mileage[/size]'
										pos: 0, 210

								Button: #return button
										on_press: sm.current = 'maintenance'
										on_press: sm.transition.direction = 'right'
										on_press: app.save()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								size_hint: 1, 1
								MDLabel:
                                        text: str(app.oilmileage)
                                        theme_text_color: 'Primary'
                                        font_style:"Display3"
                                        size_hint_y: None
                                        height: dp(36)
										pos: 200, 310
										halign: 'center'
								Button:
								        pos: 444, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileageup100k()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
							    MDLabel:
                                        text: '100k'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: 68, 152
										halign: 'center'
								Button:
								        pos: 444, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileagedown100k()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
								        pos: 532, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileageup10k()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: '10k'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: 156, 152
										halign: 'center'
								Button:
								        pos: 532, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileagedown10k()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
								        pos: 620, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileageup1k()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: '1k'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: 244, 152
										halign: 'center'
								Button:
								        pos: 620, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileagedown1k()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
								        pos: 708, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileageup100()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: '100'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: 332, 152
										halign: 'center'
								Button:
								        pos: 708, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oilmileagedown100()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

                                #-----------------------------------------------------------------------
                                MDLabel:
                                        text: str(app.oildatemonth)+"/"+str(app.oildateday)+"/"+str(app.oildateyear)
                                        theme_text_color: 'Primary'
                                        font_style:"Display3"
                                        size_hint_y: None
                                        height: dp(36)
										pos: -200, 310
										halign: 'center'
                                Button:
								        pos: 88, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildatemonthup()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: 'Month'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: -288, 152
										halign: 'center'
								Button:
								        pos: 88, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildatemonthdown()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
								        pos: 176, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildatedayup()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: 'Day'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: -200, 152
										halign: 'center'
								Button:
								        pos: 176, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildatedaydown()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

								Button:
								        pos: 262, 192
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildateyearup()
								        Image:
												source: 'data/icons/arrow_up.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								MDLabel:
                                        text: 'Year'
                                        theme_text_color: 'Primary'
                                        font_style:"Title"
                                        size_hint_y: None
                                        height: dp(36)
										pos: -112, 152
										halign: 'center'
								Button:
								        pos: 262, 96
										size_hint: .06, .1
										background_color:(0.9, 0.9, 0.9, 0.5)
										on_press: app.oildateyeardown()
								        Image:
												source: 'data/icons/arrow_down.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				TestAppScreen:
						name: "testapp"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Test[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'apps'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								size_hint: 1, 1
								Label:
										markup: True
										text: '[size=25]This app is for testing purposes.[/size]'
										pos: 0, 0





				GaugeSelectScreen:
						name: "gaugeselect"

						FloatLayout:
								size_hint: 1, 1

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]OBDII[/size]'
										pos: 0, 210

								JZLargeButton:
										text: "Speedometers"
										font_size: 25
										on_press: sm.current = 'speedoselect'
										on_press: sm.transition.direction = 'left'
										pos: 20, 300
										size_hint: .3, .2

								JZLargeButton:
										text: "Tachometers"
										font_size: 25
										on_press: sm.current = 'tachselect'
										on_press: sm.transition.direction = 'left'
										pos: 20, 190
										size_hint: .3, .2

								JZLargeButton:
										text: "Diagnostics"
										font_size: 25
										on_press: sm.current = 'diagnosticselect'
										on_press: sm.transition.direction = 'left'
										pos: 20, 80
										size_hint: .3, .2

							    JZLargeButton:
							            text: "OBDII Settings"
							            font_size: 25
							            on_press: sm.current = 'obdsettings'
							            on_press: sm.transition.direction = 'left'
							            pos: 540, 80
										size_hint: .3, .2


								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				OBDTachsScreen:
						name: "tachselect"

						FloatLayout:
								size_hint: 1, 1

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]OBDII Tachometers[/size]'
										pos: 0, 210

								JZLargeButton:
										text: "Digital Tach"
										font_size: 25
										on_press: sm.current = 'digitaltach'
										on_press: app.add_OBDVAR_RPM()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										pos: 20, 190
										size_hint: .3, .2


								JZLargeButton:
										text: "Race Tach"
										font_size: 25
										on_press: sm.current = 'racetach'
										on_press: app.add_OBDVAR_RPM()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										pos: 20, 80
										size_hint: .3, .2

								JZLargeButton:
										text: "LFA Tach"
										font_size: 25
										on_press: sm.current = 'graphicaltach2'
										on_press: app.add_OBDVAR_RPM()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										on_press: Animation(y=-100, duration=0).start(dock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_audio)
										on_press: Animation(y=-100, duration=0).start(dock_normal_perf)
										on_press: Animation(y=-100, duration=0).start(dock_normal_clock)
										on_press: Animation(y=-100, duration=0).start(dock_normal_apps)
										on_press: Animation(y=-100, duration=0).start(dock_normal_controls)
										on_press: Animation(y=-100, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=-100, duration=0).start(dock_normal_power)
										pos: 20, 300
										size_hint: .3, .2


								Button: #return button
										on_press: sm.current = 'gaugeselect'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				OBDSpeedosScreen:
						name: "speedoselect"

						FloatLayout:
								size_hint: 1, 1

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]OBDII Speedometers[/size]'
										pos: 0, 210


								JZLargeButton:
										text: "Digital Speedometer"
										font_size: 25
										on_press: sm.current = 'digitalspeedo'
										on_press: app.add_OBDVAR_SPEED()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										pos: 20, 300
										size_hint: .3, .2


								Button: #return button
										on_press: sm.current = 'gaugeselect'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				OBDDiagnosticsScreen:
						name: "diagnosticselect"

						FloatLayout:
								size_hint: 1, 1

								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]OBDII Diagnostics[/size]'
										pos: 0, 210

								JZLargeButton:
										text: "Coolant Temp"
										font_size: 25
										on_press: sm.current = 'coolanttemp'
										on_press: app.add_OBDVAR_COOLANT_TEMP()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										pos: 20, 300
										size_hint: .3, .2


								JZLargeButton:
										text: "Intake Temp"
										font_size: 25
										on_press: sm.current = 'intaketemp'
										on_press: app.add_OBDVAR_INTAKE_TEMP()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										pos: 20, 190
										size_hint: .3, .2


								JZLargeButton:
										text: "Engine Load"
										font_size: 25
										on_press: sm.current = 'engload'
										on_press: app.add_OBDVAR_LOAD()
										on_press: app.connect_OBD()
										on_press: sm.transition.direction = 'left'
										pos: 20, 80
										size_hint: .3, .2

								Button: #return button
										on_press: sm.current = 'gaugeselect'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

				OBDDigitalSpeedoScreen:
						name: "digitalspeedo"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Speedometer[/size]'
										pos: 0, 210

								Label: #Label to display vehicle speed
										markup: True
										text: app.obdspeed
										font_size: 100
										pos: 0, 00
										color: ((.8, 0, 0, 1) if app.obdspeedval > app.obdspeedlimitval else (1, 1, 1, 1))

								Image:
										source: 'data/icons/warning.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 64, 170
										size_hint: .3, .3
										opacity: (1 if app.obdspeedval > app.obdspeedlimitval else 0)

								Label: #Label to display units
										markup: True
										text: "mph"
										font_size: 20
										pos: 110, -35

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'speedoselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
				OBDDigitalTachScreen:
						name: "digitaltach"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Tachometer[/size]'
										pos: 0, 210

								Label: #Label to display vehicle speed
										markup: True
										text: app.obdRPM
										font_size: 100
										pos: 0, 50
								Label: #Label to display vehicle max RPM
										markup: True
										text: app.obdRPMmax
										font_size: 35
										pos: 0, -120

								Label: #Label to display units
										markup: True
										text: "rpm"
										font_size: 20
										pos: 140, 15

								JZLargeButton:
										text: "Reset Max"
										elevation_normal: 3
										size_hint: None, None
										size: 3 * dp(70), dp(70)
										pos_hint: {'center_x': 0.15, 'center_y': .250}
										on_press: app.zero_RPMmax()

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'tachselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								size_hint: .8, 1
								JZWideRedProgressBar:
										pos: 80, -20
										value: app.obdRPMval
										orientation: "horizontal"
										min: 0
										max: 7000

				OBDGraphicTachScreen:
						name: "racetach"
						FloatLayout:
								size_hint: 1, 1
								Image:
										source: 'data/wallpapers/greyplain.png'
										center_x: self.center_x
										center_y: self.center_y
								Image:
										source: 'data/gauges/tach.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, -36
								FloatLayout:
										canvas:
												Color:
														rgba: .8, 0, 0, 1
												Line:
														points: [400, 240, 400+.75*(150*math.sin((math.pi/5000*(app.obdRPMval))+math.pi)), 240+.75*(150*math.cos((math.pi/5000*(app.obdRPMval))+math.pi))]
														width: 3
												Color:
														rgba: 0, 0, 0, 1
												Line:
														points: [400, 240, 400+0.15*(150*math.sin((math.pi/5000*app.obdRPMval)+math.pi)), 240+0.15*(150*math.cos((math.pi/5000*app.obdRPMval)+math.pi))]
														width: 6
												Line:
														points: [400, 240, 400-0.15*(150*math.sin((math.pi/5000*app.obdRPMval)+math.pi)), 240-0.15*(150*math.cos((math.pi/5000*app.obdRPMval)+math.pi))]
														width: 6

								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210
								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'tachselect'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: app.kill_OBDVAR()
										on_press: self.canvas.clear
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
				OBDGraphicTach2Screen:
						name: "graphicaltach2"
						FloatLayout:
								Image:
										source: 'data/gauges/gauge2background.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, 0
						FloatLayout:
								canvas:
										Rectangle:
												source: 'data/gauges/gauge2background.png'
												pos: 0, 0
												size: 800, 480
										Color:
												rgba: ((0, 0, 0, 0) if app.obdRPMval < app.obdRPMredline else (1, 1, 1, 1))
										Rectangle:
												source: 'data/gauges/gauge2redring.png'
												pos: 0, 0
												size: 800, 480
										Color:
												rgba: 1, 0, 0, 1
										Line:
										        circle: 401, 240, 186, 72, (-180+(app.obdRPMredline*.036))
										        width: 40
										        cap: 'none'
										        close: False
										Color:
												rgba: 0, 0, 0, 1
										Rectangle:
												source: 'data/gauges/gauge2ticks_center.png'
												pos: 0, 0
												size: 800, 480
										Color:
												rgba: .8, 0, 0, 1
										Line:
												points: [400, 240, 400+.75*(260*math.sin((math.pi/5000*(app.obdRPMval))+math.pi)), 240+.75*(260*math.cos((math.pi/5000*(app.obdRPMval))+math.pi))]
												width: 3
										Rectangle:
												source: 'data/gauges/gauge2grad.png'
												pos: 0, 0
												size: 800, 480






								Label: #label to display current time
										markup: True
										#text: app.timenow
										text: str(app.obdRPMval)
										font_size: 40
										pos: 0, 0
								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'tachselect'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										on_press: app.kill_OBDVAR()
										on_press: self.canvas.clear
										pos: 0,0
										size_hint: 1, 1
										background_color:(0.9, 0.9, 0.9, 0.0)

				OBDCoolantScreen:
						name: "coolanttemp"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Coolant Temp[/size]'
										pos: 0, 210

								Label: #Label to display coolant temp
										markup: True
										text: app.obdcoolanttemp
										font_size: 100
										pos: 0, 0

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'diagnosticselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
				OBDIntakeTempScreen:
						name: "intaketemp"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Intake Temp[/size]'
										pos: 0, 210

								Label: #Label to display intake temp
										markup: True
										text: app.obdintaketemp
										font_size: 100
										pos: 0, 0

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'diagnosticselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
				OBDLoadScreen:
						name: "engload"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Engine Load[/size]'
										pos: 0, 210

								Label: #Label to display engine load
										markup: True
										text: app.obdengineload
										font_size: 100
										pos: 0, 0

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'diagnosticselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
								FloatLayout:
										size_hint: 1, .5
										orientation:'vertical'
										padding: '130dp'
										JZWideProgressBar:
												pos: -300, 120
												value: app.obdengineloadval
												orientation:"vertical"
												min: 0
												max: 100

				OBDSettingsScreen:
						name: "obdsettings"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]OBDII Settings[/size]'
										pos: 0, 210

								MDLabel:
								        font_style: 'Display1'
                                        theme_text_color: 'Primary'
										text: "Speed Limit: "+str(int(speedlimitslider.value))+" mph"
										halign: 'center'
                                        size_hint_y: None
                                        height: self.texture_size[1] + dp(4)
										pos: 0, 350

								MDLabel:
								        font_style: 'Display1'
                                        theme_text_color: 'Primary'
										text: "Redline: "+str(int(redlineslider.value))+" rpm"
										halign: 'center'
                                        size_hint_y: None
                                        height: self.texture_size[1] + dp(4)
										pos: 0, 250

								Button: #return button
										#text: "return to gauge select"
										on_press: sm.current = 'gaugeselect'
										on_press: sm.transition.direction = 'right'
										on_press: app.kill_OBDVAR()
										on_press: app.save()
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								size_hint: .835, .1
								MDSlider:
										pos: 66, 320
										id: speedlimitslider
										min:0
										max:125
										value: app.obdspeedlimitval
										on_value: app.speedlimit_value(*args)
								MDSlider:
										pos: 66, 220
										id: redlineslider
										min:0
										max:7000
										value: app.obdRPMredline
										on_value: app.redline_value(*args)

				AccelerometerScreen:
						name: "accelerometer"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=30]Accelerometer[/size]'
										pos: 0, 210
								Image:
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y

						FloatLayout:
                                canvas:
                                        Color:
                                                rgba: 1, 0, 0, 1
                                        Line:
                                                points: [400, 240, 400+(app.accelx*200), 240+(app.accely*200)]
                                                width: 6

						FloatLayout:
								size_hint: 1, 1
								anchor_y: 'bottom'
								Button: #return button
										#text: "return to main"
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=.2).start(dock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=0, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=0, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=0, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=0, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=.2).start(dock_normal_power)
										on_press: app.killaccel()
										pos: -369, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True



                NOSScreen:
						name: "nosscreen"
						FloatLayout:
								size_hint: 1, 1
								Image:
										id: image
										source: ('data/extra/nos_green.png' if app.time_second_mod%2==0 else 'data/extra/nos_red.png')
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True

								Button: #return button
										on_press: sm.current = 'performance'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=.2).start(dock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_audio)
										on_press: Animation(y=0, duration=.2).start(dock_normal_perf)
										on_press: Animation(y=0, duration=.2).start(dock_normal_clock)
										on_press: Animation(y=0, duration=.2).start(dock_normal_apps)
										on_press: Animation(y=0, duration=.2).start(dock_normal_controls)
										on_press: Animation(y=0, duration=.2).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=.2).start(dock_normal_power)
										pos: 0, 0
										size_hint: 1, 1
										background_color:(0.9, 0.9, 0.9, 0.0)

				WallpaperSelectScreen:
						name: "wallpaperselect"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Wallpapers[/size]'
										pos: 0, 210


								Button: #return button
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: Animation(y=-10, duration=0).start(dock)
										on_press: Animation(y=0, duration=0).start(dock_normal_audio)
										on_press: Animation(y=0, duration=0).start(dock_normal_perf)
										on_press: Animation(y=0, duration=0).start(dock_normal_clock)
										on_press: Animation(y=0, duration=0).start(dock_normal_apps)
										on_press: Animation(y=0, duration=0).start(dock_normal_controls)
										on_press: Animation(y=0, duration=0).start(dock_normal_brightness)
										on_press: Animation(y=0, duration=0).start(dock_normal_power)
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True
						FloatLayout:
								size_hint: 1, .865
								ScrollView:
										do_scroll_x: False
										GridLayout:
												cols: 3
												row_default_height: dp(156)
												row_default_width: dp(260)
												row_force_default: True
												size_hint_y: None
												height: 18 * dp(100) # /1 * self.row_default_height
												padding: dp(4), dp(4)
												spacing: dp(4)
												SmartTile:
														mipmap: True
														source: './data/wallpapers/greenmaterial.png'
														on_release: app.setwallpaper0()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blackgreenmaterial.png'
														on_release: app.setwallpaper1()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/darkgreymaterial2.png'
														on_release: app.setwallpaper2()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/polymountain.png'
														on_release: app.setwallpaper3()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/trianglematerial.png'
														on_release: app.setwallpaper4()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blackredmaterial.png'
														on_release: app.setwallpaper5()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/greybluematerial.png'
														on_release: app.setwallpaper6()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/lightblueblackmaterial.png'
														on_release: app.setwallpaper7()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/greyplain.png'
														on_release: app.setwallpaper8()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/stopwatchblue.png'
														on_release: app.setwallpaper9()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/polycube.png'
														on_release: app.setwallpaper10()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/polyvalley.png'
														on_release: app.setwallpaper11()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/purplebluematerial.png'
														on_release: app.setwallpaper12()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/bluegreymaterial.png'
														on_release: app.setwallpaper13()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/redpurplematerial.png'
														on_release: app.setwallpaper14()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/CoPilot_Wallpaper_2.png'
														on_release: app.setwallpaper15()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blackredmaterial2.png'
														on_release: app.setwallpaper16()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/androidauto.png'
														on_release: app.setwallpaper17()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/tealmaterialdesign.png'
														on_release: app.setwallpaper18()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blueblackmaterial.png'
														on_release: app.setwallpaper19()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/greenmaterial2.png'
														on_release: app.setwallpaper20()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/redbluematerial.png'
														on_release: app.setwallpaper21()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blueblackwhitematerial.png'
														on_release: app.setwallpaper22()
											    SmartTile:
														mipmap: True
														source: './data/wallpapers/polymountain2.png'
														on_release: app.setwallpaper23()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blackpoly.png'
														on_release: app.setwallpaper24()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blackredlacematerial.png'
														on_release: app.setwallpaper25()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/blueredpoly.png'
														on_release: app.setwallpaper26()
												SmartTile:
														mipmap: True
														source: './data/wallpapers/firewaterpoly.png'
														on_release: app.setwallpaper27()
											    SmartTile:
														mipmap: True
														source: './data/wallpapers/tanbluepoly.png'
														on_release: app.setwallpaper28()




#Hotkey1 Chooser
				HotKey1ChooserScreen:
						name: "hotkey1chooser"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Select an action for the HotKey located on top.[/size]'
										pos: 0, 210


								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						GridLayout:
								cols: 5
								rows: 4
								padding: 30
								spacing: 5
								size_hint: 1, .85
								pos: 0, -30
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_SeekUp()
										text: "Seek Up"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_SeekDown()
										text: "Seek Down"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_Garage()
										text: "Garage"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_Radar()
										text: "Radar"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_CupLights()
										text: "Cup Lights"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_WindowsUp()
										text: "Windows Up"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_WindowsDown()
										text: "Windows Down"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_ScreenToggle()
										text: "Screen\nToggle"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey1_None()
										text: "None"
										font_size: 20
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)

	#Hotkey2 Chooser
				HotKey2ChooserScreen:
						name: "hotkey2chooser"
						FloatLayout:
								size_hint: 1, 1
								Toolbar:
										id: toolbar
										pos_hint: {"right": 1, 'top':1}
										#title: ''
										background_color: app.theme_cls.primary_color
										opacity: 1.0
								Label: #label to display current time
										markup: True
										text: app.timenow
										font_size: 40
										pos: 340, 210

								Label: #label to display screen name
										markup: True
										text: '[size=25]Select an action for the HotKey located on bottom.[/size]'
										pos: 0, 210

								Button: #return button
										#text: "return to apps"
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										pos: -365, 399
										size_hint: 1, .2
										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												source: 'data/icons/arrow_back_white.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 50, 50
												allow_stretch: True

						GridLayout:
								cols: 5
								rows: 4
								padding: 30
								spacing: 5
								pos: 0, -30
								size_hint: 1, .85
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_SeekUp()
										text: "Seek Up"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_SeekDown()
										text: "Seek Down"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_Garage()
										text: "Garage"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_Radar()
										text: "Radar"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_CupLights()
										text: "Cup Lights"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_WindowsUp()
										text: "Windows Up"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_WindowsDown()
										text: "Windows Down"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_ScreenToggle()
										text: "Screen\nToggle"
										font_size: 20
								MDRaisedButton:
										on_press: sm.current = 'settings'
										on_press: sm.transition.direction = 'right'
										on_press: app.sethotkey2_None()
										text: "None"
										font_size: 20
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)
								Button:
										background_color:(0.9, 0.9, 0.9, 0.0)

				OffScreen:
						name: "offscreen"
						FloatLayout:
								Button: #full screen button to turn screen back on
										on_press: sm.current = 'main'
										on_press: sm.transition.direction = 'down'
										on_press: app.TurnScreenOn()


										background_color:(0.9, 0.9, 0.9, 0.0)



		QUICKEYSLayout:
				AnchorLayout: #define the QUICKEYS area
						anchor_x: 'center'
						anchor_y: 'bottom'
						FloatLayout:
								size_hint: 1, 1
								Image: #pixel style dock
										id: dock
										source: 'data/elements/pixeldock.png'
										opacity: .3
										center_x: self.center_x
										center_y: self.center_y
										pos: 0, -10
										allow_stretch: True


						FloatLayout:                                #Brightnessbar stuff
								size_hint: 1, 1
								Image:
										id: brightnessbar
										source: 'data/elements/brightnessbar.png'
										center_x: self.center_x
										center_y: self.center_y
										pos: 0, 150
										opacity: .9
										allow_stretch: True
								Button:                             #cancel button
										id: brightnessbarreturnbutton
										pos: 0, -300
										size_hint: 1, .6
										background_color:(0.9, 0.9, 0.9, 0.0) #transparent
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

						FloatLayout:                                 #Brightnessbar buttons
								id: brightnessbarbuttons
								orientation: 'horizontal'
								size_hint: 1, 1 #define percentage of screen for brightness bar buttons

								Button: #Brightness 1

										id: brightness_1_button
										size_hint: .125, .2
										pos: 150, 530
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

										on_press: app.BrightnessSet1()

										Image:

												source: 'data/icons/brightness1.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button: #Brightness 2

										id: brightness_2_button
										size_hint: .125, .2
										pos: 250, 530
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

										on_press: app.BrightnessSet2()

										Image:

												source: 'data/icons/brightness2.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button: #Brightness 3

										id: brightness_3_button
										size_hint: .125, .2
										pos: 350, 530
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

										on_press: app.BrightnessSet3()

										Image:

												source: 'data/icons/brightness3.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button: #Brightness 4

										id: brightness_4_button
										size_hint: .125, .2
										pos: 450, 530
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

										on_press: app.BrightnessSet4()

										Image:

												source: 'data/icons/brightness4.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button: #Brightness 5

										id: brightness_5_button
										size_hint: .125, .2
										pos: 550, 530
										background_color:(0.9, 0.9, 0.9, 0.0)
										on_press: Animation(y=150, duration=.2).start(brightnessbar)
										on_press: Animation(y=-300, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=530, duration=.2).start(brightness_1_button)
										on_press: Animation(y=530, duration=.2).start(brightness_2_button)
										on_press: Animation(y=530, duration=.2).start(brightness_3_button)
										on_press: Animation(y=530, duration=.2).start(brightness_4_button)
										on_press: Animation(y=530, duration=.2).start(brightness_5_button)

										on_press: app.BrightnessSet5()

										Image:

												source: 'data/icons/brightness5.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

						BoxLayout:
								orientation: 'horizontal'
								size_hint: 1, 1 #define percentage of screen for quickeys width,height
								Button:
										id: dock_normal_audio
										size_hint_y: .13
										on_press: sm.current = 'audio'


										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.displaybtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)

										Image:
												id: audioimage
												source: 'data/icons/audio.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True


								Button:
										id: dock_normal_perf
										size_hint_y: .13
										on_press: sm.current = 'performance'

										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.killbtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: perfimage
												source: 'data/icons/perf.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										id: dock_normal_clock
										size_hint_y: .13
										on_press: sm.current = 'clockchooser'

										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.killbtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: clocksimage
												source: 'data/icons/clocks.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True
								Button:
										id: dock_normal_apps
										size_hint_y: .13
										on_press: sm.current = 'apps'

										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.killbtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: appsimage
												source: 'data/icons/apps.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 80, 80
												allow_stretch: True
								Button:
										id: dock_normal_controls
										size_hint_y: .13
										on_press: sm.current = 'controls'

										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.killbtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: controlsimage
												source: 'data/icons/controls.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

								Button:
										id: dock_normal_brightness
										size_hint_y: .13

										on_press: app.killtemp()
										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_press: Animation(y=0, duration=.2).start(brightnessbar)
										on_press: Animation(y=90, duration=.2).start(brightnessbarreturnbutton)
										on_press: Animation(y=380, duration=.2).start(brightness_1_button)
										on_press: Animation(y=380, duration=.25).start(brightness_2_button)
										on_press: Animation(y=380, duration=.3).start(brightness_3_button)
										on_press: Animation(y=380, duration=.35).start(brightness_4_button)
										on_press: Animation(y=380, duration=.4).start(brightness_5_button)

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: brightnessimage
												source: 'data/icons/brightness.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 65, 65
												allow_stretch: True

								Button:
										id: dock_normal_power
										size_hint_y: .13

										on_press: app.kill_message()
										on_press: app.killtemp()
										on_press: app.kill_OBDVAR()
										on_press: app.killbtdata()

										on_press: Animation(x=-340, duration=.1).start(ShortcutDrawerBG)
										on_press: Animation(x=-340, duration=.1).start(SCD_DateButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_SettingsButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_GarageButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_OBDButton)
										on_press: Animation(x=-340, duration=.1).start(SCD_StopwatchButton)
										on_press: Animation(x=-543, duration=.2).start(SCD_Date)
										on_press: Animation(x=820, duration=.1).start(ShortcutDrawerReturnButton)

										on_press: Animation(x=1800, duration=.1).start(TempBubble) #moves button off screen

										on_release: app.shutdown()

										#turns screen off
										on_press: app.TurnScreenOff()

										on_press: sm.transition.direction = 'left'

										background_color:(0.9, 0.9, 0.9, 0.0)
										Image:
												id: displayimage
												source: 'data/icons/display.png'
												center_x: self.parent.center_x
												center_y: self.parent.center_y
												size: 70, 70
												allow_stretch: True

						FloatLayout: #LockScreenStuff
								Image:
										id: lockscreenwallpaper
										source: 'data/wallpapers/black.png'
										center_x: self.center_x
										center_y: self.center_y
										allow_stretch: True
										pos: 0, -480
								MDLabel:
										id: lockscreentime
										font_style: 'Display4'
										theme_text_color: 'Primary'
										text: app.timenow
										halign: 'center'
										pos: 0, -480
										opacity: .5
								Button:
										id: lockscreenbutton
										on_press: Animation(y=-480, duration=.1).start(lockscreenwallpaper)
										on_press: Animation(y=-480, duration=.1).start(lockscreentime)
										on_press: Animation(y=-480, duration=.1).start(lockscreenbutton)
										opacity: 0
										pos: 0, -480

